#!/bin/bash
set_response_header "Connection" "close"
if [ "${REQUEST_PATH}" = "/" ]; then
  set_response_code 302
  set_response_header Location "/demo/"
elif [ "${REQUEST_PATH}" = "/demo/" ]; then
  serve_file "demo/index.html"
elif [[ "${REQUEST_PATH}" == /demo/* ]]; then
  recv serving "${REQUEST_PATH}"
  #serve_static_string wtf
  serve_dir_or_file_from "demo" "" "${REQUEST_PATH#/demo/}"
else
  command="$(decode_url "$(sed 's|^/*||' <<< "${REQUEST_PATH}")")"

  # Amount of seconds that the command may run for before being killed
  timeout="10"

  saveIFS="$IFS"
  IFS='=&'
  query=($QUERY_STRING)
  IFS=$saveIFS

  stdin=
  stdin_fd=
  stdin_url=
  print_exit=0
  args=()
  for ((i=0; i<${#query[@]}; i+=2)); do
    query_name="$(decode_url "${query[i]}")"
    query_value="$(decode_url "${query[i+1]}")"
    if [ "${query_name}" = "arg" ]; then
      args+=("${query_value}")
    elif [ "${query_name}" = "exit" ]; then
      print_exit=1
    elif [ "${query_name}" = "stdin" ]; then
      stdin="${query_value}"
    elif [ "${query_name}" = "stdin_url" ]; then
      stdin_url="${query_value}"
    fi
  done

  set_response_header "Content-Type" "text/plain; charset=utf8"

  set_response_header "X-Cmd" "${command}"
  #if [ "${#args[@]}" -gt 0 ]; then
  #  set_response_header "X-Args" "$(printf "'%s' " "${args[@]}")"
  #fi

  if [ ! -z "${stdin_url}" ]; then
    exec {stdin_fd}< <(curl "${stdin_url}" --silent --show-error --no-buffer 2>&1)
  elif [ ! -z "${stdin}" ]; then
    exec {stdin_fd}< <(printf "${stdin}")
  fi

  if [ ! -z "${stdin_fd}" ]; then
    # Close HTTP request body stdin,
    # and redirect stdin to be the from the stdin query arg
    exec <&-
    exec <&$stdin_fd
  fi

  timeout -t "${timeout}" "${command}" "${args[@]}" 2>&1
  exit_code=$?
  recv "Exit code: ${exit_code}"

  if [ "${exit_code}" = 143 ]; then
    echo "Command timed out (${timeout}s): ${command} ${args[*]}"
  fi

  if [ "${print_exit}" -eq 1 ]; then
    echo "${exit_code}"
  fi
fi
